AWSTemplateFormatVersion: 2010-09-09
Description: Infrastructure pipeline for eks quickstart template deployment. Assumes nested stack deployment.

Parameters:
  GitSourceRepo:
    Type: String
    Description: GitHub source repository - must contain a Dockerfile and buildspec.yml in the base
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub repository name
  GitBranch:
    Type: String
    Default: master
    Description: GitHub git repository branch - change triggers a new build
    MinLength: 1
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub repository branch name
  GitHubUser:
    Type: String
    Description: GitHub username or organization
    MinLength: 3
    MaxLength: 100
    ConstraintDescription: You must enter a GitHub username or organization
  GitHubTokenSecretsManager:
    NoEcho: true
    Type: String
    Default: '{{resolve:secretsmanager:/quickstart/ekspipeline/githubtoken:SecretString:GHToken}}'
    Description: GitHub Token. Must be defined in AWS Secrets Manager. https://github.com/settings/tokens
  PipelineEmail:
    Type: String
    Description: Email Address for pipeline approval via SNS
  CodeBuildDockerImage:
    Type: String
    Description: Docker image for CodeBuild project
  MasterStackTemplateName:
    Type: String
    Description: Name of master stack template. AWS StackName of primary template this will be attached to.
  TemplateConfigFileName:
    Type: String
    Description: Filename for template parameter configuration
  MasterTemplateFileName:
    Type: String
    Description: Filename of master template. ie template.yaml, master.yaml, etc.


Resources:

  Webhook:
    DependsOn: InfrastructurePipeline
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubTokenSecretsManager
      Filters:
        - JsonPath: '$.ref'
          MatchEquals: !Sub 'refs/heads/${GitBranch}'
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref InfrastructurePipeline
      TargetAction: Source
      Name: MainInfrastructurePipeline
      TargetPipelineVersion: !GetAtt InfrastructurePipeline.Version
      RegisterWithThirdParty: 'true'

  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for inrastructure pipeline
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - "kms:*"
            Resource: "*"

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            KMSMasterKeyID: !Ref KMSKey
            SSEAlgorithm: 'aws:kms'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CodePipelineServiceRole:
    DependsOn:
      - CodePipelineArtifactBucket
      - KMSKey
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::AccountId}-InfraPipeline-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
                  - sns:Publish
              - Resource: !GetAtt KMSKey.Arn
                Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt
                  - kms:GenerateDataKey
                  - kms:DescribeKey

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'



  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    DependsOn:
      - CodePipelineArtifactBucket
      - KMSKey
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  #      Policies:
  #        - PolicyName: root
  #          PolicyDocument:
  #            Version: 2012-10-17
  #            Statement:
  #              - Resource: '*'
  #                Effect: Allow
  #                Action:
  #                  - logs:CreateLogGroup
  #                  - logs:CreateLogStream
  #                  - logs:PutLogEvents
  #              - Resource: !GetAtt CodePipelineArtifactBucket.Arn
  #                Effect: Allow
  #                Action: '*'
  #              - Resource: !GetAtt KMSKey.Arn
  #                Effect: Allow
  #                Action:
  #                  - kms:Encrypt
  #                  - kms:Decrypt
  #                  - kms:ReEncrypt
  #                  - kms:GenerateDataKey
  #                  - kms:DescribeKey


  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref PipelineEmail
          Protocol: email

  CodeBuildProject:
    DependsOn: CodeBuildServiceRole
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildDockerImage
        EnvironmentVariables:
          - Name: REPOSITORY_NAME
            Value: !Ref GitSourceRepo
          - Name: REPOSITORY_BRANCH
            Value: !Ref GitBranch
          - Name: PACKAGE_BUCKET
            Value: aws-sam-cli-managed-default-samclisourcebucket-17j50869gmwc2
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn

  InfrastructurePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - CodePipelineArtifactBucket
      - KMSKey
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactBucket
        EncryptionKey:
          Id: !GetAtt KMSKey.Arn
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitSourceRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubTokenSecretsManager
              OutputArtifacts:
                - Name: TestApp
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: TestApp
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: ChangesetDeploy
          Actions:
            #Changeset deploy infrastructure side record of changes during each deployment. This is useful for auditing/debugging
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CloudFormationExecutionRole, Arn]
                StackName: !Ref MasterStackTemplateName
                ChangeSetName: infrastructure-changeset
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplateConfiguration: !Sub "BuildOutput::${TemplateConfigFileName}"
                TemplatePath: !Sub "BuildOutput::packaged-template.yaml"
              RunOrder: '1'
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the ${MasterStackTemplateName} stack. Do you want to implement the changes?'
              RunOrder: '2'
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: infrastructure-changeset
                RoleArn: !GetAtt [CloudFormationExecutionRole, Arn]
                StackName: !Ref MasterStackTemplateName
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: '3'


